<?php

namespace App\Controller;

use App\Entity\Administration;
use App\Entity\DocAdministration;
use App\Form\DocAdministrationType;
use Doctrine\ORM\EntityManagerInterface;
use Exception;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;



/**
 * @Route("/doc/administration")
 */
class DocAdministrationController extends AbstractController
{


    /**
     * @Route("/new/{administration}", name="doc_administration_new")
     * @param Administration $administration
     * @param EntityManagerInterface $manager
     * @param Request $request
     * @return Response
     * @throws Exception
     */
    public function new(Administration $administration,EntityManagerInterface $manager,Request $request): Response
    {

        $docAdministration = new DocAdministration();
        $form = $this->createForm(DocAdministrationType::class,$docAdministration);
        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
            $docAdministration->setAdministration($administration);
            $file = $docAdministration->getDocFilename();
            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();

            $file->move(
                $this->getParameter('upload_directory'),
                $fileName);
            $docAdministration->setDocFilename($fileName);

           $manager->persist($docAdministration);
           $manager->flush();
            return $this->redirectToRoute('home',['rubrique' => 'administration']);
        }
        return $this->render('doc_administration/new.html.twig',
            [
                'administration' => $administration,
                'form' => $form->createView(),
            ]
        );
    }


    /**
     * @Route("/{id}/edit", name="doc_administration_edit", methods={"GET","POST"})
     * @param Request $request
     * @param DocAdministration $docAdministration
     * @return Response
     */
    public function edit(Request $request,DocAdministration $docAdministration): Response
    {
        $form = $this->createForm(DocAdministrationType::class,$docAdministration);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $this->getDoctrine()->getManager()->flush();

            return $this->redirectToRoute('home',['rubrique' => 'administration']);
        }

        return $this->render('doc_administration/edit.html.twig',[
            'doc_administration' => $docAdministration,
            'form' => $form->createView(),
        ]);
    }

    /**
     * @Route("/{id}", name="doc_administration_delete", methods={"DELETE"})
     * @param Request $request
     * @param DocAdministration $docAdministration
     * @return Response
     */
    public function delete(Request $request,DocAdministration $docAdministration): Response
    {
        if ($this->isCsrfTokenValid('delete' . $docAdministration->getId(),$request->request->get('_token'))) {
            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->remove($docAdministration);
            $entityManager->flush();
        }

        return $this->redirectToRoute('home',['rubrique' => 'administration']);
    }

    /**
     * @return string
     */
    private function generateUniqueFileName(): string
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid('',true));
    }
}
